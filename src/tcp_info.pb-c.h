/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_tcp_5finfo_2eproto__INCLUDED
#define PROTOBUF_C_tcp_5finfo_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Fss__TcpInfo Fss__TcpInfo;


/* --- enums --- */


/* --- messages --- */

struct  _Fss__TcpInfo
{
  ProtobufCMessage base;
  int32_t seconds;
  int64_t nanoseconds;
  protobuf_c_boolean has_tcpi_state;
  uint32_t tcpi_state;
  protobuf_c_boolean has_tcpi_ca_state;
  uint32_t tcpi_ca_state;
  protobuf_c_boolean has_tcpi_retransmits;
  uint32_t tcpi_retransmits;
  protobuf_c_boolean has_tcpi_probes;
  uint32_t tcpi_probes;
  protobuf_c_boolean has_tcpi_backoff;
  uint32_t tcpi_backoff;
  protobuf_c_boolean has_tcpi_options;
  uint32_t tcpi_options;
  protobuf_c_boolean has_tcpi_snd_wscale;
  uint32_t tcpi_snd_wscale;
  protobuf_c_boolean has_tcpi_rcv_wscale;
  uint32_t tcpi_rcv_wscale;
  protobuf_c_boolean has_tcpi_rto;
  uint32_t tcpi_rto;
  protobuf_c_boolean has_tcpi_ato;
  uint32_t tcpi_ato;
  protobuf_c_boolean has_tcpi_snd_mss;
  uint32_t tcpi_snd_mss;
  protobuf_c_boolean has_tcpi_rcv_mss;
  uint32_t tcpi_rcv_mss;
  protobuf_c_boolean has_tcpi_unacked;
  uint32_t tcpi_unacked;
  protobuf_c_boolean has_tcpi_sacked;
  uint32_t tcpi_sacked;
  protobuf_c_boolean has_tcpi_lost;
  uint32_t tcpi_lost;
  protobuf_c_boolean has_tcpi_retrans;
  uint32_t tcpi_retrans;
  protobuf_c_boolean has_tcpi_fackets;
  uint32_t tcpi_fackets;
  protobuf_c_boolean has_tcpi_last_data_sent;
  uint32_t tcpi_last_data_sent;
  protobuf_c_boolean has_tcpi_last_ack_sent;
  uint32_t tcpi_last_ack_sent;
  protobuf_c_boolean has_tcpi_last_data_recv;
  uint32_t tcpi_last_data_recv;
  protobuf_c_boolean has_tcpi_last_ack_recv;
  uint32_t tcpi_last_ack_recv;
  protobuf_c_boolean has_tcpi_pmtu;
  uint32_t tcpi_pmtu;
  protobuf_c_boolean has_tcpi_rcv_ssthresh;
  uint32_t tcpi_rcv_ssthresh;
  protobuf_c_boolean has_tcpi_rtt;
  uint32_t tcpi_rtt;
  protobuf_c_boolean has_tcpi_rttvar;
  uint32_t tcpi_rttvar;
  protobuf_c_boolean has_tcpi_snd_ssthresh;
  uint32_t tcpi_snd_ssthresh;
  protobuf_c_boolean has_tcpi_snd_cwnd;
  uint32_t tcpi_snd_cwnd;
  protobuf_c_boolean has_tcpi_advmss;
  uint32_t tcpi_advmss;
  protobuf_c_boolean has_tcpi_reordering;
  uint32_t tcpi_reordering;
  protobuf_c_boolean has_tcpi_rcv_rtt;
  uint32_t tcpi_rcv_rtt;
  protobuf_c_boolean has_tcpi_rcv_space;
  uint32_t tcpi_rcv_space;
  protobuf_c_boolean has_tcpi_total_retrans;
  uint32_t tcpi_total_retrans;
};
#define FSS__TCP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fss__tcp_info__descriptor) \
    , 0, 0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


/* Fss__TcpInfo methods */
void   fss__tcp_info__init
                     (Fss__TcpInfo         *message);
size_t fss__tcp_info__get_packed_size
                     (const Fss__TcpInfo   *message);
size_t fss__tcp_info__pack
                     (const Fss__TcpInfo   *message,
                      uint8_t             *out);
size_t fss__tcp_info__pack_to_buffer
                     (const Fss__TcpInfo   *message,
                      ProtobufCBuffer     *buffer);
Fss__TcpInfo *
       fss__tcp_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fss__tcp_info__free_unpacked
                     (Fss__TcpInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Fss__TcpInfo_Closure)
                 (const Fss__TcpInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fss__tcp_info__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_tcp_5finfo_2eproto__INCLUDED */
